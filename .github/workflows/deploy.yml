name: Bygg og deploy

on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}/presenterte-kandidater-api:${{ github.sha }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run tests
        run: ./gradlew check --info

  deploy-to-dev:
    name: Deploy til dev
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/kul-feature'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Bygg jar med Gradle
        run: ./gradlew shadowJar
      - name: Logg inn til Github
        uses: docker/login-action@v1
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Bygg og publiser Docker-image
        uses: docker/build-push-action@v2
        with:
            context: .
            push: true
            tags: ${{ env.IMAGE }}
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          VAR: image=${{ env.IMAGE }}
          RESOURCE: nais/nais.yaml
          VARS: nais/nais-dev.json

  deploy-to-prod:
    name: Deploy til prod
    needs: deploy-to-dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          VAR: image=${{ env.IMAGE }}
          RESOURCE: nais/nais.yaml,nais/alerts.yaml
          VARS: nais/nais-prod.json
